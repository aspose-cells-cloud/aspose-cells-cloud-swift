//
// CellsObjectOperateTaskParameter.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public class CellsObjectOperateTaskParameter: TaskParameter {

    public var operateParameter: OperateParameter?
    public var destinationWorkbook: FileSource?
    public var operateObject: OperateObject?

public enum CodingKeys: String, CodingKey { 
        case operateParameter = "OperateParameter"
        case destinationWorkbook = "DestinationWorkbook"
        case operateObject = "OperateObject"
    }

    public init(operateParameter: OperateParameter?, destinationWorkbook: FileSource?, operateObject: OperateObject?) {
        self.operateParameter = operateParameter
        self.destinationWorkbook = destinationWorkbook
        self.operateObject = operateObject
        super.init()
    }

    // Encodable protocol methods
    
    public override func encode(to encoder: Encoder) throws {
        
        var container = encoder.container(keyedBy: String.self)
        
        try container.encodeIfPresent(operateParameter, forKey: "OperateParameter")
        try container.encodeIfPresent(destinationWorkbook, forKey: "DestinationWorkbook")
        try container.encodeIfPresent(operateObject, forKey: "OperateObject")
        try super.encode(to: encoder)
    }

    // Decodable protocol methods
    
    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)
        
        operateParameter = try container.decodeIfPresent(OperateParameter.self, forKey: "OperateParameter")
        destinationWorkbook = try container.decodeIfPresent(FileSource.self, forKey: "DestinationWorkbook")
        operateObject = try container.decodeIfPresent(OperateObject.self, forKey: "OperateObject")
        try super.init(from: decoder)
    }

}

