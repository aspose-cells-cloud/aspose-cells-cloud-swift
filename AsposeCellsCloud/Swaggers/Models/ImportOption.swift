//
// ImportOption.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public class ImportOption: Codable {

    public var source: FileSource?
    public var importDataType: String?
    public var destinationWorksheet: String?
    public var isInsert: Bool?

public enum CodingKeys: String, CodingKey { 
        case source = "Source"
        case importDataType = "ImportDataType"
        case destinationWorksheet = "DestinationWorksheet"
        case isInsert = "IsInsert"
    }

    public init(source: FileSource?, importDataType: String?, destinationWorksheet: String?, isInsert: Bool?) {
        self.source = source
        self.importDataType = importDataType
        self.destinationWorksheet = destinationWorksheet
        self.isInsert = isInsert
    }

    // Encodable protocol methods
    
    public func encode(to encoder: Encoder) throws {
        
        var container = encoder.container(keyedBy: String.self)
        
        try container.encodeIfPresent(source, forKey: "Source")
        try container.encodeIfPresent(importDataType, forKey: "ImportDataType")
        try container.encodeIfPresent(destinationWorksheet, forKey: "DestinationWorksheet")
        try container.encodeIfPresent(isInsert, forKey: "IsInsert")
    }
    
    // Decodable protocol methods
    
    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)
        
        source = try container.decodeIfPresent(FileSource.self, forKey: "Links")
        importDataType = try container.decodeIfPresent(String.self, forKey: "Links")
        destinationWorksheet = try container.decodeIfPresent(String.self, forKey: "Links")
        isInsert = try container.decodeIfPresent(Bool.self, forKey: "Links")
    }
    
}

