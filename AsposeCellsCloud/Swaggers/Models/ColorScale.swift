//
// ColorScale.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** Describe the ColorScale conditional formatting rule. This conditional formatting    rule creates a gradated color scale on the cells.              */

public struct ColorScale: Codable {

    /** Get or set this ColorScale&#39;s max value object.  Cannot set null or CFValueObject     with type FormatConditionValueType.Min to it. */
    public var maxCfvo: ConditionalFormattingValue?
    /** Get or set the mid value object&#39;s corresponding color.              */
    public var midColor: Color?
    /** Get or set the min value object&#39;s corresponding color. */
    public var minColor: Color?
    /** Get or set this ColorScale&#39;s mid value object.  Cannot set CFValueObject    with type FormatConditionValueType.Max or FormatConditionValueType.Min to    it.              */
    public var midCfvo: ConditionalFormattingValue?
    /** Get or set this ColorScale&#39;s min value object.  Cannot set null or CFValueObject    with type FormatConditionValueType.Max to it.              */
    public var minCfvo: ConditionalFormattingValue?
    /** Get or set the max value object&#39;s corresponding color. */
    public var maxColor: Color?

public enum CodingKeys: String, CodingKey { 
        case maxCfvo = "MaxCfvo"
        case midColor = "MidColor"
        case minColor = "MinColor"
        case midCfvo = "MidCfvo"
        case minCfvo = "MinCfvo"
        case maxColor = "MaxColor"
    }

    public init(maxCfvo: ConditionalFormattingValue?, midColor: Color?, minColor: Color?, midCfvo: ConditionalFormattingValue?, minCfvo: ConditionalFormattingValue?, maxColor: Color?) {
        self.maxCfvo = maxCfvo
        self.midColor = midColor
        self.minColor = minColor
        self.midCfvo = midCfvo
        self.minCfvo = minCfvo
        self.maxColor = maxColor
    }


}

