//
// Validation.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct Validation: Codable {

    public var link: Link?
    /** Represents the value or expression associated with the second part of the    data validation.              */
    public var formula2: String?
    /** Represents the value or expression associated with the data validation. */
    public var formula1: String?
    /** Indicates whether the data validation error message will be displayed whenever    the user enters invalid data. */
    public var showError: Bool?
    /** Represents the data validation error message. */
    public var errorMessage: String?
    /** Indicates whether data validation displays a drop-down list that contains    acceptable values. */
    public var inCellDropDown: Bool?
    /** Indicates whether the data validation input message will be displayed whenever    the user selects a cell in the data validation range. */
    public var showInput: Bool?
    /** Represents the validation alert style.Information,Stop,Warning              */
    public var alertStyle: String?
    /** Represents the title of the data-validation input dialog box. */
    public var inputTitle: String?
    /** Indicates whether blank values are permitted by the range data validation. */
    public var ignoreBlank: Bool?
    /** Represents the first value associated with the data validation.              */
    public var value2: String?
    /** Represents the first value associated with the data validation. */
    public var value1: String?
    /** Represents the operator for the data validation. Between,Equal,GreaterThan,GreaterOrEqual,LessThan,LessOrEqual,None,NotBetween,NotEqual */
    public var _operator: String?
    /** Represents the title of the data-validation error dialog box. */
    public var errorTitle: String?
    /** Represents the data validation type. AnyValue ,WholeNumber,Decimal,List,Date,Time,TextLength,Custom              */
    public var type: String?
    /** Represents the data validation input message. */
    public var inputMessage: String?
    /** Represents a collection of Aspose.Cells.CellArea which contains the data     validation settings. */
    public var areaList: [CellArea]?

public enum CodingKeys: String, CodingKey { 
        case link = "link"
        case formula2 = "Formula2"
        case formula1 = "Formula1"
        case showError = "ShowError"
        case errorMessage = "ErrorMessage"
        case inCellDropDown = "InCellDropDown"
        case showInput = "ShowInput"
        case alertStyle = "AlertStyle"
        case inputTitle = "InputTitle"
        case ignoreBlank = "IgnoreBlank"
        case value2 = "Value2"
        case value1 = "Value1"
        case _operator = "Operator"
        case errorTitle = "ErrorTitle"
        case type = "Type"
        case inputMessage = "InputMessage"
        case areaList = "AreaList"
    }

    public init(link: Link?, formula2: String?, formula1: String?, showError: Bool?, errorMessage: String?, inCellDropDown: Bool?, showInput: Bool?, alertStyle: String?, inputTitle: String?, ignoreBlank: Bool?, value2: String?, value1: String?, _operator: String?, errorTitle: String?, type: String?, inputMessage: String?, areaList: [CellArea]?) {
        self.link = link
        self.formula2 = formula2
        self.formula1 = formula1
        self.showError = showError
        self.errorMessage = errorMessage
        self.inCellDropDown = inCellDropDown
        self.showInput = showInput
        self.alertStyle = alertStyle
        self.inputTitle = inputTitle
        self.ignoreBlank = ignoreBlank
        self.value2 = value2
        self.value1 = value1
        self._operator = _operator
        self.errorTitle = errorTitle
        self.type = type
        self.inputMessage = inputMessage
        self.areaList = areaList
    }


}

