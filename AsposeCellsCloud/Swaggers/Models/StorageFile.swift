//
// StorageFile.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


/** File or folder information */

public class StorageFile: Codable {

    /** File or folder name. */
    public var name: String?
    /** True if it is a folder. */
    public var isFolder: Bool
    /** File or folder last modified DateTime. */
    public var modifiedDate: String?
    /** File or folder size. */
    public var size: Int64
    /** File or folder path. */
    public var path: String?

public enum CodingKeys: String, CodingKey { 
        case name = "Name"
        case isFolder = "IsFolder"
        case modifiedDate = "ModifiedDate"
        case size = "Size"
        case path = "Path"
    }

    public init(name: String?, isFolder: Bool, modifiedDate: String?, size: Int64, path: String?) {
        self.name = name
        self.isFolder = isFolder
        self.modifiedDate = modifiedDate
        self.size = size
        self.path = path
    }

    // Encodable protocol methods
    
    public func encode(to encoder: Encoder) throws {
        
        var container = encoder.container(keyedBy: String.self)
        
        try container.encodeIfPresent(name, forKey: "Name")
        try container.encodeIfPresent(isFolder, forKey: "IsFolder")
        try container.encodeIfPresent(modifiedDate, forKey: "ModifiedDate")
        try container.encodeIfPresent(size, forKey: "Size")
        try container.encodeIfPresent(path, forKey: "Path")
    }
    
    // Decodable protocol methods
    
    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)
        
        name = try container.decodeIfPresent(String.self, forKey: "Name")
        isFolder = try container.decodeIfPresent(Bool.self, forKey: "IsFolder")!
        modifiedDate = try container.decodeIfPresent(String.self, forKey: "ModifiedDate")
        size = try container.decodeIfPresent(Int64.self, forKey: "Size")!
        path = try container.decodeIfPresent(String.self, forKey: "Path")
    }

}

