//
// HtmlSaveOptions.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct HtmlSaveOptions: Codable {

    public var enableHTTPCompression: Bool?
    public var saveFormat: String?
    /** Make the workbook empty after saving the file. */
    public var clearData: Bool?
    /** The cached file folder is used to store some large data. */
    public var cachedFileFolder: String?
    /** Indicates whether validate merged areas before saving the file. The default value is false.              */
    public var validateMergedAreas: Bool?
    public var refreshChartCache: Bool?
    /** If true and the directory does not exist, the directory will be automatically created before saving the file.              */
    public var createDirectory: Bool?
    public var sortNames: Bool?
    public var attachedFilesDirectory: String?
    public var attachedFilesUrlPrefix: String?
    public var encoding: String?
    public var exportActiveWorksheetOnly: Bool?
    public var exportChartImageFormat: String?
    public var exportImagesAsBase64: Bool?
    public var hiddenColDisplayType: String?
    public var hiddenRowDisplayType: String?
    public var htmlCrossStringType: String?
    public var isExpImageToTempDir: Bool?
    public var pageTitle: String?
    public var parseHtmlTagInCell: Bool?

public enum CodingKeys: String, CodingKey { 
        case enableHTTPCompression = "EnableHTTPCompression"
        case saveFormat = "SaveFormat"
        case clearData = "ClearData"
        case cachedFileFolder = "CachedFileFolder"
        case validateMergedAreas = "ValidateMergedAreas"
        case refreshChartCache = "RefreshChartCache"
        case createDirectory = "CreateDirectory"
        case sortNames = "SortNames"
        case attachedFilesDirectory = "AttachedFilesDirectory"
        case attachedFilesUrlPrefix = "AttachedFilesUrlPrefix"
        case encoding = "Encoding"
        case exportActiveWorksheetOnly = "ExportActiveWorksheetOnly"
        case exportChartImageFormat = "ExportChartImageFormat"
        case exportImagesAsBase64 = "ExportImagesAsBase64"
        case hiddenColDisplayType = "HiddenColDisplayType"
        case hiddenRowDisplayType = "HiddenRowDisplayType"
        case htmlCrossStringType = "HtmlCrossStringType"
        case isExpImageToTempDir = "IsExpImageToTempDir"
        case pageTitle = "PageTitle"
        case parseHtmlTagInCell = "ParseHtmlTagInCell"
    }

    public init(enableHTTPCompression: Bool?, saveFormat: String?, clearData: Bool?, cachedFileFolder: String?, validateMergedAreas: Bool?, refreshChartCache: Bool?, createDirectory: Bool?, sortNames: Bool?, attachedFilesDirectory: String?, attachedFilesUrlPrefix: String?, encoding: String?, exportActiveWorksheetOnly: Bool?, exportChartImageFormat: String?, exportImagesAsBase64: Bool?, hiddenColDisplayType: String?, hiddenRowDisplayType: String?, htmlCrossStringType: String?, isExpImageToTempDir: Bool?, pageTitle: String?, parseHtmlTagInCell: Bool?) {
        self.enableHTTPCompression = enableHTTPCompression
        self.saveFormat = saveFormat
        self.clearData = clearData
        self.cachedFileFolder = cachedFileFolder
        self.validateMergedAreas = validateMergedAreas
        self.refreshChartCache = refreshChartCache
        self.createDirectory = createDirectory
        self.sortNames = sortNames
        self.attachedFilesDirectory = attachedFilesDirectory
        self.attachedFilesUrlPrefix = attachedFilesUrlPrefix
        self.encoding = encoding
        self.exportActiveWorksheetOnly = exportActiveWorksheetOnly
        self.exportChartImageFormat = exportChartImageFormat
        self.exportImagesAsBase64 = exportImagesAsBase64
        self.hiddenColDisplayType = hiddenColDisplayType
        self.hiddenRowDisplayType = hiddenRowDisplayType
        self.htmlCrossStringType = htmlCrossStringType
        self.isExpImageToTempDir = isExpImageToTempDir
        self.pageTitle = pageTitle
        self.parseHtmlTagInCell = parseHtmlTagInCell
    }


}

