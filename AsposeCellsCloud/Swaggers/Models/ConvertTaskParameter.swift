//
// ConvertTaskParameter.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public class ConvertTaskParameter: TaskParameter {

    public var workbook: FileSource?
    public var saveOptions: SaveOptions?
    public var destinationFile: String?

public enum CodingKeys: String, CodingKey { 
        case workbook = "Workbook"
        case saveOptions = "SaveOptions"
        case destinationFile = "DestinationFile"
    }

    public init(workbook: FileSource?, saveOptions: SaveOptions?, destinationFile: String?) {
        self.workbook = workbook
        self.saveOptions = saveOptions
        self.destinationFile = destinationFile
        super.init()
    }

    // Encodable protocol methods
    
    public override func encode(to encoder: Encoder) throws {
        
        var container = encoder.container(keyedBy: String.self)
        
        try container.encodeIfPresent(workbook, forKey: "Workbook")
        try container.encodeIfPresent(saveOptions, forKey: "SaveOptions")
        try container.encodeIfPresent(destinationFile, forKey: "DestinationFile")
        try super.encode(to: encoder)
    }

    // Decodable protocol methods
    
    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)
        
        workbook = try container.decodeIfPresent(FileSource.self, forKey: "Workbook")
        saveOptions = try container.decodeIfPresent(SaveOptions.self, forKey: "SaveOptions")
        destinationFile = try container.decodeIfPresent(String.self, forKey: "DestinationFile")
        try super.init(from: decoder)
    }

}

